/****************************************************************************
** Meta object code from reading C++ file 'notebook_test.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.11.1)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'notebook_test.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.11.1. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_NotebookTest_t {
    QByteArrayData data[21];
    char stringdata0[397];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_NotebookTest_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_NotebookTest_t qt_meta_stringdata_NotebookTest = {
    {
QT_MOC_LITERAL(0, 0, 12), // "NotebookTest"
QT_MOC_LITERAL(1, 13, 12), // "initTestCase"
QT_MOC_LITERAL(2, 26, 0), // ""
QT_MOC_LITERAL(3, 27, 15), // "findInputWidget"
QT_MOC_LITERAL(4, 43, 16), // "findOutputWidget"
QT_MOC_LITERAL(5, 60, 17), // "testKeyPressEvent"
QT_MOC_LITERAL(6, 78, 15), // "outputCheckText"
QT_MOC_LITERAL(7, 94, 16), // "outputCheckPoint"
QT_MOC_LITERAL(8, 111, 15), // "outputCheckLine"
QT_MOC_LITERAL(9, 127, 21), // "outputCheckParseError"
QT_MOC_LITERAL(10, 149, 24), // "outputCheckSemanticError"
QT_MOC_LITERAL(11, 174, 22), // "testDiscretePlotLayout"
QT_MOC_LITERAL(12, 197, 22), // "testSimpleDiscretePlot"
QT_MOC_LITERAL(13, 220, 25), // "testQuadraticDiscretePlot"
QT_MOC_LITERAL(14, 246, 24), // "testContinuousPlotLayout"
QT_MOC_LITERAL(15, 271, 24), // "testSimpleContinuousPlot"
QT_MOC_LITERAL(16, 296, 27), // "testQuadraticContinuousPlot"
QT_MOC_LITERAL(17, 324, 22), // "testSineContinuousPlot"
QT_MOC_LITERAL(18, 347, 13), // "testInterrupt"
QT_MOC_LITERAL(19, 361, 19), // "testStartStopKernel"
QT_MOC_LITERAL(20, 381, 15) // "testResetKernel"

    },
    "NotebookTest\0initTestCase\0\0findInputWidget\0"
    "findOutputWidget\0testKeyPressEvent\0"
    "outputCheckText\0outputCheckPoint\0"
    "outputCheckLine\0outputCheckParseError\0"
    "outputCheckSemanticError\0"
    "testDiscretePlotLayout\0testSimpleDiscretePlot\0"
    "testQuadraticDiscretePlot\0"
    "testContinuousPlotLayout\0"
    "testSimpleContinuousPlot\0"
    "testQuadraticContinuousPlot\0"
    "testSineContinuousPlot\0testInterrupt\0"
    "testStartStopKernel\0testResetKernel"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_NotebookTest[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
      19,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,  109,    2, 0x08 /* Private */,
       3,    0,  110,    2, 0x08 /* Private */,
       4,    0,  111,    2, 0x08 /* Private */,
       5,    0,  112,    2, 0x08 /* Private */,
       6,    0,  113,    2, 0x08 /* Private */,
       7,    0,  114,    2, 0x08 /* Private */,
       8,    0,  115,    2, 0x08 /* Private */,
       9,    0,  116,    2, 0x08 /* Private */,
      10,    0,  117,    2, 0x08 /* Private */,
      11,    0,  118,    2, 0x08 /* Private */,
      12,    0,  119,    2, 0x08 /* Private */,
      13,    0,  120,    2, 0x08 /* Private */,
      14,    0,  121,    2, 0x08 /* Private */,
      15,    0,  122,    2, 0x08 /* Private */,
      16,    0,  123,    2, 0x08 /* Private */,
      17,    0,  124,    2, 0x08 /* Private */,
      18,    0,  125,    2, 0x08 /* Private */,
      19,    0,  126,    2, 0x08 /* Private */,
      20,    0,  127,    2, 0x08 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void NotebookTest::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        NotebookTest *_t = static_cast<NotebookTest *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->initTestCase(); break;
        case 1: _t->findInputWidget(); break;
        case 2: _t->findOutputWidget(); break;
        case 3: _t->testKeyPressEvent(); break;
        case 4: _t->outputCheckText(); break;
        case 5: _t->outputCheckPoint(); break;
        case 6: _t->outputCheckLine(); break;
        case 7: _t->outputCheckParseError(); break;
        case 8: _t->outputCheckSemanticError(); break;
        case 9: _t->testDiscretePlotLayout(); break;
        case 10: _t->testSimpleDiscretePlot(); break;
        case 11: _t->testQuadraticDiscretePlot(); break;
        case 12: _t->testContinuousPlotLayout(); break;
        case 13: _t->testSimpleContinuousPlot(); break;
        case 14: _t->testQuadraticContinuousPlot(); break;
        case 15: _t->testSineContinuousPlot(); break;
        case 16: _t->testInterrupt(); break;
        case 17: _t->testStartStopKernel(); break;
        case 18: _t->testResetKernel(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

QT_INIT_METAOBJECT const QMetaObject NotebookTest::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_NotebookTest.data,
      qt_meta_data_NotebookTest,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *NotebookTest::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *NotebookTest::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_NotebookTest.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int NotebookTest::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 19)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 19;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 19)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 19;
    }
    return _id;
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
